[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.9 (Oracle Corporation Java 20.0.2)
[debug] Load.defaultLoad until apply took 136.2085ms
[debug]           Load.loadUnit: plugins took 88.567ms
[debug]           Load.loadUnit: defsScala took 0.6077ms
[debug] [Loading] Scanning directory D:\Users\acer\Desktop\Scala\ScalaHw\project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\Users\acer\Desktop\Scala\ScalaHw\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 82.0865 ms
[debug]               Load.resolveProject(scalahw-build) took 274.8025ms
[debug]             Load.loadTransitive: finalizeProject(Project(id scalahw-build, base: D:\Users\acer\Desktop\Scala\ScalaHw\project, plugins: List(<none>))) took 511.1499ms
[debug] [Loading] Done in D:\Users\acer\Desktop\Scala\ScalaHw\project, returning: (scalahw-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 611.4702ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.5504ms
[debug]         Load.loadUnit(file:/D:/Users/acer/Desktop/Scala/ScalaHw/project/, ...) took 733.0914ms
[debug]       Load.apply: load took 930.2124ms
[debug]       Load.apply: resolveProjects took 5.1158ms
[debug]       Load.apply: finalTransforms took 43.0537ms
[debug]       Load.apply: config.delegates took 4.3426ms
[debug]       Load.apply: Def.make(settings)... took 307.1336ms
[debug]       Load.apply: structureIndex took 70.4353ms
[debug]       Load.apply: mkStreams took 1.1847ms
[info] loading project definition from D:\Users\acer\Desktop\Scala\ScalaHw\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 2156.2664ms
[debug]     Load.loadUnit: defsScala took 0.0029ms
[debug] [Loading] Scanning directory D:\Users\acer\Desktop\Scala\ScalaHw
[debug]       Load.loadUnit: mkEval took 4.642ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.4895 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 1.8409ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: D:\Users\acer\Desktop\Scala\ScalaHw, plugins: List(<none>))) took 3.9586ms
[debug] [Loading] Done in D:\Users\acer\Desktop\Scala\ScalaHw, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 143.6621ms
[debug]     Load.loadUnit: cleanEvalClasses took 7.2452ms
[debug]   Load.loadUnit(file:/D:/Users/acer/Desktop/Scala/ScalaHw/, ...) took 2308.92ms
[debug] Load.apply: load took 2333.4048ms
[debug] Load.apply: resolveProjects took 0.1483ms
[debug] Load.apply: finalTransforms took 9.6127ms
[debug] Load.apply: config.delegates took 0.3097ms
[debug] Load.apply: Def.make(settings)... took 68.1331ms
[debug] Load.apply: structureIndex took 33.2821ms
[debug] Load.apply: mkStreams took 0.0033ms
[info] set current project to ScalaHw (in build file:/D:/Users/acer/Desktop/Scala/ScalaHw/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[info] sbt server started at local:sbt-server-25749125428e431b088c
[debug] Writing bsp connection file
[info] started sbt server
